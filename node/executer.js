// Generated by CoffeeScript 1.6.3
(function() {
  var exec, sys;

  sys = require('sys');

  exec = require('child_process').exec;

  exports.Executer = (function() {
    function Executer() {
      this.callbacks = {};
    }

    Executer.prototype.notify = function(name) {
      var callbacks,
        _this = this;
      if (name) {
        callbacks = this.callbacks[name];
      } else {
        console.log("No name provided");
      }
      return function(error, stdout, stderr) {
        var callback, _i, _len, _results;
        _this.puts(error, stdout, stderr);
        _results = [];
        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {
          callback = callbacks[_i];
          _results.push(callback(error, stdout, stderr));
        }
        return _results;
      };
    };

    Executer.prototype.addCallback = function(name, callback) {
      var _base;
      if ((_base = this.callbacks)[name] == null) {
        _base[name] = [];
      }
      if (callback) {
        return this.callbacks[name].push(callback);
      } else {
        return console.log("No callback for " + name);
      }
    };

    Executer.prototype.execute = function(cmd, callback) {
      this.addCallback(cmd.name, callback);
      return exec(cmd.command, this.notify(cmd.name));
    };

    Executer.prototype.puts = function(error, stdout, stderr) {
      if (error) {
        return sys.puts(stderr);
      } else {
        return sys.puts(stdout);
      }
    };

    return Executer;

  })();

}).call(this);

/*
//@ sourceMappingURL=executer.map
*/
