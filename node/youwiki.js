// Generated by CoffeeScript 1.6.3
(function() {
  var Manager, Say, Wikipedia, cmdString, download, fs, m, mkdirp, path, request, speaker;

  Wikipedia = require('./wikipedia').Wikipedia;

  Say = require('./say').Say;

  path = require('path');

  mkdirp = require('mkdirp');

  speaker = new Say('en');

  cmdString = function(text) {
    text = text.replace(/"/g, ' ');
    text = text.replace(/'/g, '');
    text = text.replace(/\(/g, ' ');
    text = text.replace(/\)/g, ' ');
    text = text.replace(/\|/g, ' ');
    text = text.replace(/\[/g, ' ');
    return text = text.replace(/\]/g, ' ');
  };

  fs = require("fs");

  request = require("request");

  download = function(uri, filename) {
    console.log("Downloading " + uri + " into " + filename);
    return request(uri).pipe(fs.createWriteStream(filename));
  };

  Manager = (function() {
    Manager.prototype.langs = ['en'];

    function Manager() {
      this.wiki = new Wikipedia();
    }

    Manager.prototype.pathOf = function(title) {
      return path.join('..', 'projects');
    };

    Manager.prototype.structure = function(title) {
      var p;
      p = this.pathOf(title);
      console.log(p);
      mkdir(p);
      mkdir(path.join(p, 'images'));
      mkdir(path.join(p, 'audio'));
      return {
        root: p,
        images: path.join(p, 'images'),
        audio: path.join(p, 'audio.aiff'),
        texts: path.join(p, 'text.txt')
      };
    };

    Manager.prototype.speak = function(title, textFile, audioFile) {
      title = cmdString(title);
      return speaker.produce(audioFile, textFile, function() {
        return console.log('Done');
      });
    };

    Manager.prototype.downloadImages = function(uri, images) {
      var img, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = images.length; _i < _len; _i++) {
        img = images[_i];
        _results.push(download(img.url, path.join(uri, img.name)));
      }
      return _results;
    };

    Manager.prototype.nameOf = function(title) {
      var name;
      name = title.toLowerCase();
      name = name.replace(/\s/g, '_');
      return name = cmdString(name);
    };

    Manager.prototype.build = function(title, text, images) {
      var project;
      project = this.structure(this.nameOf(title));
      this.downloadImages(project.images, images);
      fs.writeFileSync(project.text, text);
      return this.speak(title, project.audio, project.text);
    };

    Manager.prototype.run = function() {
      var lang, _i, _len, _ref, _results;
      _ref = this.langs;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        lang = _ref[_i];
        _results.push(this.wiki.dailyArticle(lang, this.speak));
      }
      return _results;
    };

    return Manager;

  })();

  m = new Manager();

  m.run();

}).call(this);

/*
//@ sourceMappingURL=youwiki.map
*/
