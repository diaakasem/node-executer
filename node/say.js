// Generated by CoffeeScript 1.6.3
(function() {
  var Executer,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Executer = require('./executer').Executer;

  exports.Say = (function(_super) {
    __extends(Say, _super);

    Say.prototype.voices = {
      en: ['samantha', 'tom']
    };

    function Say(defaultlang) {
      this.defaultlang = defaultlang;
      Say.__super__.constructor.call(this);
    }

    Say.prototype.voice = function(lang) {
      var arr, res;
      if (lang == null) {
        lang = this.defaultlang;
      }
      arr = lang ? this.voices[lang] : [];
      if (!arr.length) {
        return null;
      }
      res = arr[Math.floor(Math.random() * arr.length)];
      console.log("Speaking " + res + " voice.");
      return res;
    };

    Say.prototype.say = function(something, callback) {
      var cmd, v;
      v = this.voice();
      cmd = {
        name: 'say',
        command: "say " + something
      };
      if (v) {
        cmd.command += " -v " + v;
      }
      return this.execute(cmd, callback);
    };

    Say.prototype.produce = function(audioFile, textFile, callback) {
      var cmd, v;
      v = this.voice();
      cmd = {
        name: 'say',
        command: "say -o \"" + audioFile + "\" -f \"" + textFile + "\" "
      };
      if (v) {
        cmd.command += "-v " + v + " ";
      }
      console.log(cmd.command);
      return this.execute(cmd, callback);
    };

    return Say;

  })(Executer);

}).call(this);

/*
//@ sourceMappingURL=say.map
*/
