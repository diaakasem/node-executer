// Generated by CoffeeScript 1.11.1
(function() {
  "use strict";
  var controller;

  controller = function(root, scope, http, params, timeout, location) {
    var imageExtensions, promise, remover;
    scope.project = {};
    scope.project.images = [];
    scope.pathOf = function(img) {
      return "projects/" + scope.project.name + "/images/" + img;
    };
    imageExtensions = ['png', 'jpg', 'jpeg'];
    scope.isEmpty = function(name) {
      var ext, j, len;
      if (!name) {
        return true;
      }
      for (j = 0, len = imageExtensions.length; j < len; j++) {
        ext = imageExtensions[j];
        if (_.str.endsWith(name.toLowerCase(), ext)) {
          return false;
        }
      }
      return true;
    };
    scope.isSvg = function(name) {
      if (!name) {
        return false;
      }
      return _.str.endsWith(name.toLowerCase(), 'svg');
    };
    remover = function(url) {
      var h;
      h = http({
        method: 'delete',
        url: url
      });
      h.success(function(res) {
        console.log(res);
        return location.path('/');
      });
      return h.error(function(err) {
        return console.log(err);
      });
    };
    scope.removeDB = function() {
      return remover("/project/id/" + scope.project._id);
    };
    scope.remove = function() {
      return remover("/project/" + scope.project.name);
    };
    scope.rebuild = function() {
      var promise, url;
      url = scope.project.wikipedia;
      console.log(url);
      promise = http({
        method: 'post',
        url: '/build/url/',
        data: {
          url: url
        }
      });
      promise.success(function(result) {
        console.log(result);
        return location.path('/');
      });
      return promise.error(function(error) {
        return console.log(error);
      });
    };
    scope.mark = function(status, stay) {
      var h;
      h = http({
        method: 'post',
        url: "/project/" + scope.project.name,
        data: {
          status: status
        }
      });
      h.success(function(res) {
        console.log(res);
        if (!stay) {
          return location.path('/');
        }
      });
      return h.error(function(err) {
        return console.log(err);
      });
    };
    promise = http({
      method: 'get',
      url: "/project/" + params.id
    });
    return promise.success((function(_this) {
      return function(result) {
        var i, imgPath;
        scope.project = result;
        scope.project.images = _.filter(scope.project.images, function(image) {
          return !scope.isSvg(image.name) && !scope.isEmpty(image.name);
        });
        i = 0;
        imgPath = scope.pathOf(scope.project.images[i++].name);
        $('.image img').attr('src', imgPath);
        timeout(function() {
          return fit($('.image img')[0], $('.image')[0], {
            vAlign: fit.CENTER
          });
        }, 1000);
        return scope.start = _.once(function() {
          var onAudio;
          root.audioElement.src = "projects/" + scope.project.name + "/audio.aiff.mp3";
          root.audioElement.play();
          onAudio = (function(_this) {
            return function(event) {
              var changeImage, imgCount, scroll, scrollFn, splits, time;
              scope.duration = root.audioElement.duration;
              time = Math.floor(scope.duration * 1000 / scope.project.images.length);
              imgCount = scope.project.images.length;
              splits = imgCount < 5 ? imgCount : imgCount + 1;
              scroll = $('.text')[0].scrollHeight / splits;
              scrollFn = function() {
                var scrollTo;
                scrollTo = scroll * i;
                return $('.text').animate({
                  scrollTop: scrollTo
                }, 1000);
              };
              changeImage = function() {
                if (i >= imgCount) {
                  scrollFn();
                  scope.mark('videoed', true);
                  return;
                }
                return $('.image img').fadeOut(500, (function(_this) {
                  return function() {
                    $('.image img').attr('src', scope.pathOf(scope.project.images[i].name));
                    $('.image img').fadeIn(500);
                    timeout(function() {
                      return fit($('.image img')[0], $('.image')[0], {
                        vAlign: fit.CENTER
                      });
                    }, 80);
                    scrollFn();
                    i++;
                    return scope.imageTimer = timeout(changeImage, time);
                  };
                })(this));
              };
              return scope.imageTimer = timeout(changeImage, time);
            };
          })(this);
          root.audioElement.addEventListener("loadedmetadata", onAudio);
          return root.$on('$routeChangeStart', function() {
            timeout.cancel(scope.imageTimer);
            return root.audioElement.removeEventListener("loadedmetadata", onAudio);
          });
        });
      };
    })(this));
  };

  angular.module("nodeExecuterApp").controller("ProjectCtrl", ['$rootScope', '$scope', '$http', '$routeParams', '$timeout', '$location', controller]);

}).call(this);

//# sourceMappingURL=project.js.map
